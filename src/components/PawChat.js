import React, { useState, useRef, useEffect } from 'react';
import './PawChat.css';

const OPENROUTER_API_KEY = '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';
const OPENROUTER_URL = 'https://openrouter.ai/api/v1/chat/completions';

const PawChat = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState([
    {
      id: 1,
      text: "Wuff! üêï Hallo! Ich bin PAW, dein pers√∂nlicher Pawder Assistent! Ich bin eine KI und helfe dir gerne bei allen Fragen rund um unsere Hundew√ºrze. Was m√∂chtest du wissen?",
      sender: 'paw',
      timestamp: new Date()
    }
  ]);
  const [inputValue, setInputValue] = useState('');
  const [isTyping, setIsTyping] = useState(false);
  const messagesEndRef = useRef(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const pawResponses = {
    greeting: [
      "Wuff! üêï Hallo! Ich bin PAW, dein pers√∂nlicher Pawder Assistent! Ich helfe dir gerne bei allen Fragen rund um unsere Hundew√ºrze. Was m√∂chtest du wissen?",
      "Hallo! üêæ Sch√∂n, dass du da bist! Ich bin PAW und kenne mich bestens mit Pawder aus. Wie kann ich dir helfen?",
      "Hey! üêï Willkommen bei Pawder! Ich bin PAW und beantworte gerne alle deine Fragen zu unseren Produkten, Versand und mehr!"
    ],
    shipping: [
      "üöö Versand? Klar! Wir versenden kostenlos ab 50‚Ç¨ in Deutschland mit DHL. Unter 50‚Ç¨ kostet der Versand nur 4,99‚Ç¨. Die Lieferung dauert 1-3 Werktage - super schnell! üì¶",
      "üì¶ Versandkosten im Detail: Ab 50‚Ç¨ Bestellwert versenden wir kostenlos mit DHL. Unter 50‚Ç¨ kostet der Versand 4,99‚Ç¨. Lieferung erfolgt in 1-3 Werktagen direkt zu dir nach Hause! ‚ö°",
      "‚ö° Versandinfo: Kostenlos ab 50‚Ç¨, unter 50‚Ç¨ nur 4,99‚Ç¨. Wir versenden mit DHL und die Lieferung dauert 1-3 Werktage. Alle Pakete werden sicher verpackt und schnell zu dir gebracht! üöö"
    ],
    products: [
      "ü¶¥ Wir haben 4 tolle Sorten: Leber-Power (f√ºr Vitamin A-Z), Knochen-Kick (f√ºr starke Knochen), Magenwohl (f√ºr die Verdauung) und Fell-Glanz (f√ºr gesundes Fell)! Jede Sorte ist speziell f√ºr bestimmte Bed√ºrfnisse entwickelt. üíö",
      "üêï Unsere 4 Pawder Sorten: Leber-Power mit Vitaminen, Knochen-Kick f√ºr Knochengesundheit, Magenwohl f√ºr die Verdauung und Fell-Glanz f√ºr sch√∂nes Fell. Alle sind 100% nat√ºrlich und von Tier√§rzten entwickelt! ü¶¥",
      "üíö Unsere Pawder Sorten: Leber-Power (Vitamine), Knochen-Kick (Knochen), Magenwohl (Verdauung) und Fell-Glanz (Fell). Jede Sorte ist auf spezifische Bed√ºrfnisse abgestimmt und 100% nat√ºrlich! üêï"
    ],
    ingredients: [
      "üåø Pawder besteht nur aus nat√ºrlichen Zutaten! Keine k√ºnstlichen Zus√§tze, Aromen oder Konservierungsstoffe. Nur das Beste aus der Natur, sorgf√§ltig ausgew√§hlt f√ºr die Gesundheit deines Hundes! ‚úÖ",
      "‚úÖ Pawder ist 100% nat√ºrlich! Keine k√ºnstlichen Zus√§tze, nur hochwertige nat√ºrliche Zutaten. Entwickelt mit Tier√§rzten und speziell f√ºr Hunde zusammengestellt. Gesund und lecker! üåø",
      "üêæ Pawder enth√§lt ausschlie√ülich nat√ºrliche Zutaten! Keine k√ºnstlichen Aromen, Farbstoffe oder Konservierungsmittel. Nur das Beste aus der Natur, von Tier√§rzten entwickelt f√ºr die optimale Gesundheit deines Hundes! üíö"
    ],
    order: [
      "üõçÔ∏è Bestellen kannst du ganz einfach im Shop! Gehe auf 'Produkte' in der Navigation oder klicke auf 'Jetzt einkaufen'. Sichere Bezahlung mit PayPal, Kreditkarte oder Klarna! üí≥",
      "üí≥ Bestellprozess: Einfach im Shop die gew√ºnschten Produkte ausw√§hlen, in den Warenkorb legen und sicher bezahlen (PayPal, Kreditkarte, Klarna). Versand erfolgt innerhalb 1-3 Werktagen! üì±",
      "üì± Bestellung: Gehe zu 'Produkte' und w√§hle deine Lieblingssorten aus. Sichere Bezahlung m√∂glich, Versand kostenlos ab 50‚Ç¨. Einfach und schnell! üõçÔ∏è"
    ],
    price: [
      "üí∞ Pawder kostet 19,99‚Ç¨ pro Dose (100g). Das reicht f√ºr etwa 1-2 Monate je nach Hundegr√∂√üe. Ab 50‚Ç¨ Bestellwert versenden wir kostenlos! üêï",
      "üíµ Eine Dose Pawder kostet 19,99‚Ç¨ f√ºr 100g. Das ist ein fairer Preis f√ºr hochwertige, nat√ºrliche Hundew√ºrze. Versandkostenfrei ab 50‚Ç¨ Bestellwert! üíö",
      "üêï Pawder Preis: 19,99‚Ç¨ pro 100g Dose. Hochwertige Qualit√§t zu einem fairen Preis. Versand kostenlos ab 50‚Ç¨ Bestellwert! üí∞"
    ],
    dosage: [
      "ü•Ñ Dosierung: 1-2 Teel√∂ffel pro Mahlzeit, je nach Hundegr√∂√üe. Kleinere Hunde 1 TL, gr√∂√üere Hunde 2 TL. Einfach √ºber das Futter streuen und gut vermischen! üêï",
      "üìè Dosierung Pawder: 1-2 Teel√∂ffel pro Mahlzeit. Kleine Hunde: 1 TL, gro√üe Hunde: 2 TL. √úber das Futter streuen und vermischen. Einfach und effektiv! ü•Ñ",
      "üêæ Dosierung: 1-2 Teel√∂ffel pro Mahlzeit je nach Gr√∂√üe deines Hundes. Einfach √ºber das Futter streuen und gut vermischen. Die nat√ºrlichen Zutaten werden gerne gefressen! üìè"
    ],
    benefits: [
      "üåü Pawder Vorteile: Nat√ºrliche Zutaten, von Tier√§rzten entwickelt, verbessert die Futterakzeptanz, unterst√ºtzt die Gesundheit, verschiedene Sorten f√ºr unterschiedliche Bed√ºrfnisse! üêï",
      "üí™ Pawder Benefits: 100% nat√ºrlich, gesundheitsf√∂rdernd, lecker f√ºr Hunde, einfach zu dosieren, verschiedene Sorten, von Experten entwickelt! üåü",
      "üêï Pawder Vorteile: Nat√ºrliche Inhaltsstoffe, verbessert die Futterqualit√§t, unterst√ºtzt die Gesundheit, verschiedene Sorten, einfach anzuwenden, von Tier√§rzten empfohlen! üí™"
    ],
    allergy: [
      "‚ö†Ô∏è Allergien: Pawder enth√§lt nur nat√ºrliche Zutaten. Bei bekannten Allergien deines Hundes solltest du die Zutatenliste pr√ºfen. Bei Unsicherheit konsultiere deinen Tierarzt! üêï",
      "üîç Allergien: Alle Zutaten sind auf der Verpackung aufgelistet. Bei Allergien deines Hundes pr√ºfe die Zutatenliste. Bei Fragen wende dich an deinen Tierarzt! ‚ö†Ô∏è",
      "üêæ Allergien: Pawder ist nat√ºrlich, aber pr√ºfe bei Allergien deines Hundes die Zutatenliste. Bei Unsicherheit frage deinen Tierarzt um Rat! üîç"
    ],
    storage: [
      "üè† Lagerung: Pawder trocken und k√ºhl lagern, am besten in der Originalverpackung. Nach dem √ñffnen gut verschlie√üen. Haltbarkeit: 12 Monate nach Herstellung! üì¶",
      "üì¶ Lagerung Pawder: Trocken und k√ºhl aufbewahren, Originalverpackung verwenden, nach √ñffnung gut verschlie√üen. Haltbar 12 Monate ab Herstellungsdatum! üè†",
      "üè† Aufbewahrung: Pawder trocken und k√ºhl lagern, gut verschlie√üen nach dem √ñffnen. Haltbarkeit betr√§gt 12 Monate. Einfach und praktisch! üì¶"
    ],
    default: [
      "Wuff! üêï Das ist eine interessante Frage! Ich helfe dir gerne bei Fragen zu unseren Produkten, Versand, Preisen, Dosierung oder allgemeinen Infos zu Pawder. Was m√∂chtest du genau wissen?",
      "üêæ Hmm, da bin ich mir nicht ganz sicher. Ich kann dir gerne bei Fragen zu unseren 4 Sorten, Versand, Preisen, Dosierung oder der Anwendung helfen. Kannst du das anders formulieren?",
      "Wuff! üêï Ich helfe dir gerne bei Fragen zu Pawder! Du kannst mich zu Produkten, Versand, Preisen, Dosierung oder allgemeinen Infos fragen. Was interessiert dich? üêæ"
    ]
  };

  const getPawResponse = async (userMessage) => {
    try {
             const systemPrompt = `Du bist PAW, ein freundlicher und hilfsbereiter KI-Assistent f√ºr Pawder, eine Marke f√ºr nat√ºrliche Hundew√ºrze. 

WICHTIGE INFORMATIONEN √úBER PAWDER:
- Pawder ist eine Marke f√ºr nat√ºrliche Hundew√ºrze
- 4 Sorten: Leber-Power (Vitamine), Knochen-Kick (Knochen), Magenwohl (Verdauung), Fell-Glanz (Fell)
- Preis: 19,99‚Ç¨ pro 100g Dose
- Versand: Kostenlos ab 50‚Ç¨, unter 50‚Ç¨ 4,99‚Ç¨ mit DHL
- Lieferzeit: 1-3 Werktage
- Dosierung: 1-2 Teel√∂ffel pro Mahlzeit je nach Hundegr√∂√üe
- 100% nat√ºrliche Zutaten, von Tier√§rzten entwickelt
- Haltbarkeit: 12 Monate, trocken und k√ºhl lagern
- Bezahlung: PayPal, Kreditkarte, Klarna

DEIN STIL:
- Verwende immer Emojis (üêï, ü¶¥, üíö, üåø, etc.)
- Sei freundlich, hilfsbereit und sympathisch
- Antworte auf Deutsch
- Verwende "Wuff!" am Anfang von Antworten
- Sei informativ aber nicht zu lang
- Wenn du etwas nicht wei√üt, sage das ehrlich
- WICHTIG: Beende immer deine S√§tze vollst√§ndig und schneide nicht mitten im Satz ab
- Schreibe kurze, pr√§gnante Antworten (maximal 2-3 S√§tze)

Antworte jetzt auf die Frage des Kunden:`;

      const response = await fetch(OPENROUTER_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
          'HTTP-Referer': 'https://pawder-shop.netlify.app',
          'X-Title': 'Pawder Shop'
        },
        body: JSON.stringify({
          model: 'deepseek/deepseek-r1:free',
          messages: [
            {
              role: 'system',
              content: systemPrompt
            },
            {
              role: 'user',
              content: userMessage
            }
          ],
                     max_tokens: 500,
           temperature: 0.7
        })
      });

      if (!response.ok) {
        throw new Error(`API Error: ${response.status}`);
      }

             const data = await response.json();
       let responseText = data.choices[0].message.content;
       
       // Sicherstellen, dass die Antwort vollst√§ndig ist
       if (responseText && !responseText.endsWith('.') && !responseText.endsWith('!') && !responseText.endsWith('?')) {
         responseText += '!';
       }
       
       return responseText;
    } catch (error) {
      console.error('AI API Error:', error);
      // Fallback zu den urspr√ºnglichen Antworten bei Fehlern
      const lowerMessage = userMessage.toLowerCase();
      
      if (lowerMessage.includes('versand') || lowerMessage.includes('lieferung') || lowerMessage.includes('kostenlos')) {
        return pawResponses.shipping[Math.floor(Math.random() * pawResponses.shipping.length)];
      }
      
      if (lowerMessage.includes('produkt') || lowerMessage.includes('sorte') || lowerMessage.includes('leber')) {
        return pawResponses.products[Math.floor(Math.random() * pawResponses.products.length)];
      }
      
      if (lowerMessage.includes('preis') || lowerMessage.includes('kosten') || lowerMessage.includes('‚Ç¨')) {
        return pawResponses.price[Math.floor(Math.random() * pawResponses.price.length)];
      }
      
      return "Wuff! üêï Entschuldigung, ich habe gerade technische Probleme. Aber ich helfe dir gerne bei Fragen zu Pawder! üêæ";
    }
  };

  const handleSendMessage = async () => {
    if (!inputValue.trim()) return;

    const userMessage = {
      id: messages.length + 1,
      text: inputValue,
      sender: 'user',
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputValue('');
    setIsTyping(true);

    try {
      // KI-Antwort abrufen
      const aiResponse = await getPawResponse(inputValue);
      
      const pawResponse = {
        id: messages.length + 2,
        text: aiResponse,
        sender: 'paw',
        timestamp: new Date()
      };
      
      setMessages(prev => [...prev, pawResponse]);
    } catch (error) {
      console.error('Error getting AI response:', error);
      // Fallback-Antwort bei Fehlern
      const pawResponse = {
        id: messages.length + 2,
        text: "Wuff! üêï Entschuldigung, ich habe gerade technische Probleme. Aber ich helfe dir gerne bei Fragen zu Pawder! üêæ",
        sender: 'paw',
        timestamp: new Date()
      };
      
      setMessages(prev => [...prev, pawResponse]);
    } finally {
      setIsTyping(false);
    }
  };

  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      handleSendMessage();
    }
  };

  return (
    <>
             {/* Chat Toggle Button */}
       <div className={`paw-chat-toggle ${isOpen ? 'open' : ''}`} onClick={() => setIsOpen(!isOpen)}>
         <div className="paw-avatar">
           <img src="/paw-chat-avatar.png" alt="PAW" className="paw-avatar-img" />
         </div>
        <div className="paw-status">
          <span className="paw-name">PAW</span>
          <span className="paw-status-text">{isOpen ? 'Chat schlie√üen' : 'Live Chat'}</span>
        </div>
        <div className="paw-indicator">
          <span className="paw-dot"></span>
        </div>
      </div>

      {/* Chat Window */}
      {isOpen && (
        <div className="paw-chat-window">
                     <div className="paw-chat-header">
             <div className="paw-chat-avatar">
               <img src="/paw-chat-avatar.png" alt="PAW" className="paw-avatar-img" />
             </div>
            <div className="paw-chat-info">
              <h3>PAW - Dein Pawder Assistent</h3>
              <span className="paw-online">üü¢ Online</span>
            </div>
            <button className="paw-close-btn" onClick={() => setIsOpen(false)}>
              ‚úï
            </button>
          </div>

          <div className="paw-chat-messages">
            {messages.map((message) => (
                             <div key={message.id} className={`paw-message ${message.sender}`}>
                 {message.sender === 'paw' && (
                   <div className="paw-message-avatar">
                     <img src="/paw-chat-avatar.png" alt="PAW" className="paw-avatar-img" />
                   </div>
                 )}
                <div className="paw-message-content">
                  <div className="paw-message-text">{message.text}</div>
                  <div className="paw-message-time">
                    {message.timestamp.toLocaleTimeString('de-DE', { 
                      hour: '2-digit', 
                      minute: '2-digit' 
                    })}
                  </div>
                </div>
              </div>
            ))}
            
                         {isTyping && (
               <div className="paw-message paw">
                 <div className="paw-message-avatar">
                   <img src="/paw-chat-avatar.png" alt="PAW" className="paw-avatar-img" />
                 </div>
                <div className="paw-message-content">
                  <div className="paw-typing">
                    <span></span>
                    <span></span>
                    <span></span>
                  </div>
                </div>
              </div>
            )}
            
            <div ref={messagesEndRef} />
          </div>

          <div className="paw-chat-input">
            <input
              type="text"
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              onKeyPress={handleKeyPress}
              placeholder="Schreib PAW eine Nachricht..."
              disabled={isTyping}
            />
            <button 
              onClick={handleSendMessage}
              disabled={!inputValue.trim() || isTyping}
              className="paw-send-btn"
            >
              üêæ
            </button>
          </div>
        </div>
      )}
    </>
  );
};

export default PawChat; 